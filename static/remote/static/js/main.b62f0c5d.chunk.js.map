{"version":3,"sources":["Pages/Loading.tsx","Components/Timer.tsx","Pages/Controlls.tsx","Pages/Questions.tsx","App.tsx","index.tsx"],"names":["className","useState","secs","setSecs","useEffect","timer","setTimeout","clearTimeout","id","onClick","seconds","hours","Math","floor","mins","slice","formatTime","socket","setQuestionsVisible","Timer","emit","role","aria-label","setQusetions","questions","map","q","filter","ques","text","App","undefined","setSocket","questionsVisible","setQuestions","soc","io","on","info","Object","keys","index","handle","useFullScreenHandle","Loading","Questions","Controlls","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAEe,aACb,OAAO,yBAAKA,UAAU,QAAf,gCCMM,iBAAa,IAAD,EACDC,mBAAS,GADR,mBAClBC,EADkB,KACZC,EADY,KAUzB,OAPAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAQD,EAAO,KACd,KACH,OAAO,kBAAMK,aAAaF,OAI1B,yBAAKG,GAAG,YAAYC,QAAS,kBAAMN,EAAQ,KAlB/C,SAAoBO,GAClB,IAAMC,EAAQC,KAAKC,MAAMH,EAAU,MAC7BI,EAAOF,KAAKC,MAAOH,EAAU,KAAQ,IACrCR,EAAOQ,EAAU,GACvB,MAAM,GAAN,QAAW,IAAMC,GAAOI,OAAO,GAA/B,aAAsC,IAAMD,GAAMC,OAAO,GAAzD,aAAgE,IAAMb,GAAMa,OAAO,IAe9EC,CAAWd,KCbH,cAAoD,IAAxCe,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,oBACjC,OACE,yBAAKlB,UAAU,QACb,kBAACmB,EAAD,MACA,0BAAMnB,UAAU,QAAQS,QAAS,kBAAMQ,EAAOG,KAAK,OAAQ,WAAWC,KAAK,MAAMC,aAAW,YAA5F,gBAGA,6BACE,0BAAMtB,UAAU,QAAQS,QAAS,kBAAMQ,EAAOG,KAAK,OAAQ,aAAaC,KAAK,MAAMC,aAAW,YAA9F,gBAGA,0BAAMtB,UAAU,QAAQS,QAAS,kBAAMQ,EAAOG,KAAK,OAAQ,cAAcC,KAAK,MAAMC,aAAW,YAA/F,iBAIF,0BAAMtB,UAAU,QAAQS,QAAS,kBAAMQ,EAAOG,KAAK,OAAQ,aAAaC,KAAK,MAAMC,aAAW,YAA9F,gBAGA,6BACA,6BACA,4BACEb,QAAS,WACPQ,EAAOG,KAAK,gBAAiB,IAC7BF,GAAoB,IAEtBlB,UAAU,YACVQ,GAAG,iBANL,oBCdS,cAA6E,IAAjES,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,oBAAqBK,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,UACpE,OACE,yBAAKxB,UAAU,QACb,2BAAOQ,GAAG,kBACPgB,EAAUC,KAAI,SAACC,GAAD,OACb,wBACEjB,QAAS,WACPQ,EAAOG,KAAK,iBAAkBM,EAAElB,IAChCe,EAAaC,EAAUG,QAAO,SAACC,GAAD,OAAUA,EAAKpB,KAAOkB,EAAElB,SAGxD,4BAAKkB,EAAEG,MACP,wBAAI7B,UAAU,kBAAd,UAIN,4BACES,QAAS,WACPQ,EAAOG,KAAK,iBACZF,GAAoB,IAEtBlB,UAAU,YACVQ,GAAG,iBANL,oB,iCCgBSsB,MAtCf,WAAgB,IAAD,EACe7B,wBAA4C8B,GAD3D,mBACNd,EADM,KACEe,EADF,OAEmC/B,oBAAS,GAF5C,mBAENgC,EAFM,KAEYf,EAFZ,OAGqBjB,mBAAqB,IAH1C,mBAGNuB,EAHM,KAGKU,EAHL,KAoBb,OAfA9B,qBAAU,WACR,IAAM+B,EAAMC,MACZD,EAAIE,GAAG,WAAW,WAChBF,EAAIf,KAAK,OAAQ,SAEnBe,EAAIE,GAAG,wBAAwB,SAACC,GAC9BJ,EACIK,OAAOC,KAAKF,GAAiCb,KAAI,SAACgB,GAClD,MAAO,CAAEjC,GAAIiC,EAAOZ,KAAMS,EAAKG,WAIrCT,EAAUG,KACT,IAGD,kBAAC,IAAD,CAAYO,OAAQC,oBACNZ,IAAXd,EACC,kBAAC2B,EAAD,MACEX,EACF,kBAACY,EAAD,CACE3B,oBAAqBA,EACrBD,OAAQA,EACRO,UAAWA,EACXD,aAAcW,IAGhB,kBAACY,EAAD,CAAe5B,oBAAqBA,EAAqBD,OAAQA,MCpCzE8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b62f0c5d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function () {\n  return <div className=\"page\">Navazování spojení</div>;\n}\n","import React, { useEffect, useState } from \"react\";\n\nfunction formatTime(seconds: number) {\n  const hours = Math.floor(seconds / 3600);\n  const mins = Math.floor((seconds % 3600) / 60);\n  const secs = seconds % 60;\n  return `${(\"0\" + hours).slice(-2)}:${(\"0\" + mins).slice(-2)}:${(\"0\" + secs).slice(-2)}`;\n}\n\nexport default function () {\n  const [secs, setSecs] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setSecs(secs + 1);\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n\n  return (\n    <div id=\"timePanel\" onClick={() => setSecs(0)}>\n      {formatTime(secs)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Timer from \"../Components/Timer\";\n\ninterface IProps {\n  socket: SocketIOClient.Socket;\n  setQuestionsVisible: (val: boolean) => void;\n}\n\nexport default function ({ socket, setQuestionsVisible }: IProps) {\n  return (\n    <div className=\"page\">\n      <Timer />\n      <span className=\"arrow\" onClick={() => socket.emit(\"move\", \"moveUp\")} role=\"img\" aria-label=\"arrow-up\">\n        ⬆️\n      </span>\n      <div>\n        <span className=\"arrow\" onClick={() => socket.emit(\"move\", \"moveLeft\")} role=\"img\" aria-label=\"arrow-up\">\n          ⬅️\n        </span>\n        <span className=\"arrow\" onClick={() => socket.emit(\"move\", \"moveRight\")} role=\"img\" aria-label=\"arrow-up\">\n          ➡️\n        </span>\n      </div>\n      <span className=\"arrow\" onClick={() => socket.emit(\"move\", \"moveDown\")} role=\"img\" aria-label=\"arrow-up\">\n        ⬇️\n      </span>\n      <br />\n      <br />\n      <button\n        onClick={() => {\n          socket.emit(\"showQuestions\", \"\");\n          setQuestionsVisible(true);\n        }}\n        className=\"questions\"\n        id=\"showQuestions\"\n      >\n        Show questions\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\ninterface IProps {\n  socket: SocketIOClient.Socket;\n  setQuestionsVisible: (val: boolean) => void;\n  questions: Question[];\n  setQusetions: (questions: Question[]) => void;\n}\n\nexport interface Question {\n  id: number;\n  text: string;\n}\n\nexport default function ({ socket, setQuestionsVisible, setQusetions, questions }: IProps) {\n  return (\n    <div className=\"page\">\n      <table id=\"questionsTable\">\n        {questions.map((q) => (\n          <tr\n            onClick={() => {\n              socket.emit(\"removeQuestion\", q.id);\n              setQusetions(questions.filter((ques) => ques.id !== q.id));\n            }}\n          >\n            <td>{q.text}</td>\n            <td className=\"deleteQuestion\">X</td>\n          </tr>\n        ))}\n      </table>\n      <button\n        onClick={() => {\n          socket.emit(\"hideQuestions\");\n          setQuestionsVisible(false);\n        }}\n        className=\"questions\"\n        id=\"hideQuestions\"\n      >\n        Hide questions\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport LoadingPage from \"./Pages/Loading\";\nimport ControllsPage from \"./Pages/Controlls\";\nimport QuestionsPage, { Question } from \"./Pages/Questions\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\nfunction App() {\n  const [socket, setSocket] = useState<SocketIOClient.Socket | undefined>(undefined);\n  const [questionsVisible, setQuestionsVisible] = useState(false);\n  const [questions, setQuestions] = useState<Question[]>([]);\n\n  useEffect(() => {\n    const soc = io();\n    soc.on(\"connect\", () => {\n      soc.emit(\"role\", \"rc\");\n    });\n    soc.on(\"questionsInformation\", (info: { [index: number]: string }) => {\n      setQuestions(\n        ((Object.keys(info) as unknown[]) as number[]).map((index) => {\n          return { id: index, text: info[index] };\n        })\n      );\n    });\n    setSocket(soc);\n  }, []);\n\n  return (\n    <FullScreen handle={useFullScreenHandle()}>\n      {socket === undefined ? (\n        <LoadingPage />\n      ) : questionsVisible ? (\n        <QuestionsPage\n          setQuestionsVisible={setQuestionsVisible}\n          socket={socket}\n          questions={questions}\n          setQusetions={setQuestions}\n        />\n      ) : (\n        <ControllsPage setQuestionsVisible={setQuestionsVisible} socket={socket} />\n      )}\n    </FullScreen>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}